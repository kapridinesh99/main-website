{"ast":null,"code":"var _jsxFileName = \"/Users/sleepycat/main-website/src/State/AuthProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport axios from 'axios';\nimport { useMutation } from 'react-query';\nimport { redirect } from 'react-router-dom';\nimport { useEffect, useContext, createContext } from 'react';\nimport { resourceService } from '../axios';\nimport { decodeJWT, login, logout, requestPasswordReset, register } from '../Functions/auth';\nimport { clearCredentials, getCredentials, setCredentials } from '../Functions/util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({});\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const loginMutation = useMutation(login, {\n    onSuccess: ({\n      userID,\n      userToken\n    }) => {\n      setCredentials({\n        userToken,\n        userID\n      });\n    }\n  });\n  const logoutMutation = useMutation(logout, {\n    onSettled: () => {\n      clearCredentials();\n      redirect('/login');\n    }\n  });\n  const signupMutation = useMutation(register);\n  const requestPasswordResetMutation = useMutation(requestPasswordReset);\n  useEffect(() => {\n    function interceptResponseService() {\n      resourceService.interceptors.request.use(function (config) {\n        const {\n          userToken,\n          userID\n        } = getCredentials();\n        if (!userToken || !userID) {\n          clearCredentials();\n          redirect('/login');\n          throw new axios.Cancel('Auth token absent');\n        }\n        config.headers.Authorization = `Bearer ${userToken}`;\n        return config;\n      }, function (error) {\n        return Promise.reject(error);\n      });\n      const interceptor = resourceService.interceptors.response.use(response => response, function (error) {\n        var _error$response;\n        if ((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) !== 400) {\n          return Promise.reject(error);\n        }\n        resourceService.interceptors.response.eject(interceptor);\n        redirect('/login');\n      });\n    }\n    interceptResponseService();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const value = {\n    state: {\n      isLoggedIn() {\n        var _decodeJWT;\n        const {\n          userToken\n        } = getCredentials();\n        if (!userToken) return false;\n        const {\n          exp\n        } = (_decodeJWT = decodeJWT(userToken)) !== null && _decodeJWT !== void 0 ? _decodeJWT : {};\n        return Date.now() < exp * 1000;\n      }\n    },\n    loginMutation,\n    logoutMutation,\n    signupMutation,\n    requestPasswordResetMutation\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n_s(AuthProvider, \"0K0s95JQ1zWE5KbtrIZEI8GkOVU=\", false, function () {\n  return [useMutation, useMutation, useMutation, useMutation];\n});\n_c = AuthProvider;\nexport default function useAuth() {\n  _s2();\n  return useContext(AuthContext);\n}\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["axios","useMutation","redirect","useEffect","useContext","createContext","resourceService","decodeJWT","login","logout","requestPasswordReset","register","clearCredentials","getCredentials","setCredentials","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","loginMutation","onSuccess","userID","userToken","logoutMutation","onSettled","signupMutation","requestPasswordResetMutation","interceptResponseService","interceptors","request","use","config","Cancel","headers","Authorization","error","Promise","reject","interceptor","response","_error$response","status","eject","value","state","isLoggedIn","_decodeJWT","exp","Date","now","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/sleepycat/main-website/src/State/AuthProvider.js"],"sourcesContent":["import axios from 'axios';\nimport { useMutation } from 'react-query';\nimport { redirect } from 'react-router-dom';\nimport { useEffect, useContext, createContext } from 'react';\nimport { resourceService } from '../axios';\nimport { decodeJWT, login, logout, requestPasswordReset, register } from '../Functions/auth';\nimport { clearCredentials, getCredentials, setCredentials } from '../Functions/util';\n\nconst AuthContext = createContext({});\n\nexport function AuthProvider({ children }) {\n    const loginMutation = useMutation(login, {\n        onSuccess: ({ userID, userToken }) => {\n            setCredentials({ userToken, userID });\n        },\n    });\n    const logoutMutation = useMutation(logout, {\n        onSettled: () => {\n            clearCredentials();\n            redirect('/login');\n        },\n    });\n    const signupMutation = useMutation(register);\n    const requestPasswordResetMutation = useMutation(requestPasswordReset);\n    useEffect(() => {\n        function interceptResponseService() {\n            resourceService.interceptors.request.use(function(config) {\n                const { userToken, userID } = getCredentials();\n                if (!userToken || !userID) {\n                    clearCredentials();\n                    redirect('/login');\n                    throw new axios.Cancel('Auth token absent');\n                }\n                config.headers.Authorization = `Bearer ${userToken}`;\n                return config;\n            }, function(error) {\n                return Promise.reject(error);\n            });\n            const interceptor = resourceService.interceptors.response.use(\n                response => response, \n                function(error) {\n                    if (error?.response?.status !== 400) {\n                        return Promise.reject(error);\n                    }\n    \n                    resourceService.interceptors.response.eject(interceptor);\n                    \n                    redirect('/login');\n                }\n            );\n        }\n        interceptResponseService();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const value = {\n        state: {\n            isLoggedIn() {\n                const { userToken } = getCredentials();\n                if (!userToken) return false;\n                const { exp } = decodeJWT(userToken) ?? {};\n                return Date.now() < exp * 1000;\n            }\n        },\n        loginMutation,\n        logoutMutation,\n        signupMutation,\n        requestPasswordResetMutation,\n    };\n\n    return (\n        <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\n    );\n}\n\nexport default function useAuth() {\n    return useContext(AuthContext);\n}"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,SAAS,EAAEC,UAAU,EAAEC,aAAa,QAAQ,OAAO;AAC5D,SAASC,eAAe,QAAQ,UAAU;AAC1C,SAASC,SAAS,EAAEC,KAAK,EAAEC,MAAM,EAAEC,oBAAoB,EAAEC,QAAQ,QAAQ,mBAAmB;AAC5F,SAASC,gBAAgB,EAAEC,cAAc,EAAEC,cAAc,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErF,MAAMC,WAAW,gBAAGZ,aAAa,CAAC,CAAC,CAAC,CAAC;AAErC,OAAO,SAASa,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAMC,aAAa,GAAGpB,WAAW,CAACO,KAAK,EAAE;IACrCc,SAAS,EAAEA,CAAC;MAAEC,MAAM;MAAEC;IAAU,CAAC,KAAK;MAClCV,cAAc,CAAC;QAAEU,SAAS;QAAED;MAAO,CAAC,CAAC;IACzC;EACJ,CAAC,CAAC;EACF,MAAME,cAAc,GAAGxB,WAAW,CAACQ,MAAM,EAAE;IACvCiB,SAAS,EAAEA,CAAA,KAAM;MACbd,gBAAgB,CAAC,CAAC;MAClBV,QAAQ,CAAC,QAAQ,CAAC;IACtB;EACJ,CAAC,CAAC;EACF,MAAMyB,cAAc,GAAG1B,WAAW,CAACU,QAAQ,CAAC;EAC5C,MAAMiB,4BAA4B,GAAG3B,WAAW,CAACS,oBAAoB,CAAC;EACtEP,SAAS,CAAC,MAAM;IACZ,SAAS0B,wBAAwBA,CAAA,EAAG;MAChCvB,eAAe,CAACwB,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,UAASC,MAAM,EAAE;QACtD,MAAM;UAAET,SAAS;UAAED;QAAO,CAAC,GAAGV,cAAc,CAAC,CAAC;QAC9C,IAAI,CAACW,SAAS,IAAI,CAACD,MAAM,EAAE;UACvBX,gBAAgB,CAAC,CAAC;UAClBV,QAAQ,CAAC,QAAQ,CAAC;UAClB,MAAM,IAAIF,KAAK,CAACkC,MAAM,CAAC,mBAAmB,CAAC;QAC/C;QACAD,MAAM,CAACE,OAAO,CAACC,aAAa,GAAI,UAASZ,SAAU,EAAC;QACpD,OAAOS,MAAM;MACjB,CAAC,EAAE,UAASI,KAAK,EAAE;QACf,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;MAChC,CAAC,CAAC;MACF,MAAMG,WAAW,GAAGlC,eAAe,CAACwB,YAAY,CAACW,QAAQ,CAACT,GAAG,CACzDS,QAAQ,IAAIA,QAAQ,EACpB,UAASJ,KAAK,EAAE;QAAA,IAAAK,eAAA;QACZ,IAAI,CAAAL,KAAK,aAALA,KAAK,wBAAAK,eAAA,GAALL,KAAK,CAAEI,QAAQ,cAAAC,eAAA,uBAAfA,eAAA,CAAiBC,MAAM,MAAK,GAAG,EAAE;UACjC,OAAOL,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;QAChC;QAEA/B,eAAe,CAACwB,YAAY,CAACW,QAAQ,CAACG,KAAK,CAACJ,WAAW,CAAC;QAExDtC,QAAQ,CAAC,QAAQ,CAAC;MACtB,CACJ,CAAC;IACL;IACA2B,wBAAwB,CAAC,CAAC;IAC9B;EACA,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMgB,KAAK,GAAG;IACVC,KAAK,EAAE;MACHC,UAAUA,CAAA,EAAG;QAAA,IAAAC,UAAA;QACT,MAAM;UAAExB;QAAU,CAAC,GAAGX,cAAc,CAAC,CAAC;QACtC,IAAI,CAACW,SAAS,EAAE,OAAO,KAAK;QAC5B,MAAM;UAAEyB;QAAI,CAAC,IAAAD,UAAA,GAAGzC,SAAS,CAACiB,SAAS,CAAC,cAAAwB,UAAA,cAAAA,UAAA,GAAI,CAAC,CAAC;QAC1C,OAAOE,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGF,GAAG,GAAG,IAAI;MAClC;IACJ,CAAC;IACD5B,aAAa;IACbI,cAAc;IACdE,cAAc;IACdC;EACJ,CAAC;EAED,oBACIZ,OAAA,CAACC,WAAW,CAACmC,QAAQ;IAACP,KAAK,EAAEA,KAAM;IAAA1B,QAAA,EAAEA;EAAQ;IAAAkC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAE7E;AAACpC,EAAA,CA/DeF,YAAY;EAAA,QACFjB,WAAW,EAKVA,WAAW,EAMXA,WAAW,EACGA,WAAW;AAAA;AAAAwD,EAAA,GAbpCvC,YAAY;AAiE5B,eAAe,SAASwC,OAAOA,CAAA,EAAG;EAAAC,GAAA;EAC9B,OAAOvD,UAAU,CAACa,WAAW,CAAC;AAClC;AAAC0C,GAAA,CAFuBD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}