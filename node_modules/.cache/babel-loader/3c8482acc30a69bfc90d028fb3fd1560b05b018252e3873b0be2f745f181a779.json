{"ast":null,"code":"import { getCredentials } from '../State/AuthProvider';\nimport { authService } from '../axios';\nconst env = process.env.REACT_APP_BACKEND_ENV === 'dev' ? 'dev' : '';\nexport function decodeJWT(token) {\n  const payloadString = token.split('.')[1];\n  let payload = null;\n  try {\n    if (payloadString) {\n      payload = JSON.parse(Buffer.from(payloadString, 'base64'));\n    }\n  } catch (error) {\n    console.error('Invalid token received');\n  }\n  return payload;\n}\n;\nexport const login = async ({\n  payload\n}) => {\n  const {\n    data\n  } = await authService.post(`${env}/login`, {\n    ...payload\n  });\n  return data.data;\n};\nexport const logout = async () => {\n  return await authService.post(`${env}/logout`);\n};\nexport const register = async ({\n  payload\n}) => {\n  return await authService.post(`${env}/create/user`, {\n    ...payload\n  });\n};\nexport async function verifyAuth() {\n  try {\n    const {\n      userToken,\n      userID\n    } = getCredentials();\n    const res = await authService.get(`${env}/user/details/${userID}`, {\n      headers: {\n        'Authorization': `Bearer ${userToken}`\n      }\n    });\n    return res.status === 200;\n  } catch (error) {\n    return false;\n  }\n}\nexport async function requestPasswordReset({}) {\n  return authService.post(`${env}/forgotPassword`, {});\n}","map":{"version":3,"names":["getCredentials","authService","env","process","REACT_APP_BACKEND_ENV","decodeJWT","token","payloadString","split","payload","JSON","parse","Buffer","from","error","console","login","data","post","logout","register","verifyAuth","userToken","userID","res","get","headers","status","requestPasswordReset"],"sources":["/Users/sleepycat/main-website/src/Functions/auth.js"],"sourcesContent":["import { getCredentials } from '../State/AuthProvider';\nimport { authService } from '../axios';\n\nconst env = process.env.REACT_APP_BACKEND_ENV === 'dev' ? 'dev' : ''; \n\nexport function decodeJWT(token) {\n    const payloadString = token.split('.')[1];\n    let payload = null;\n    try {\n        if (payloadString) {\n            payload = JSON.parse(Buffer.from(payloadString, 'base64'));\n        }\n    } catch (error) {\n        console.error('Invalid token received');\n    }\n    return payload;\n};\n\nexport const login = async ({ payload }) => {\n    const { data } = await authService.post(`${env}/login`, { ...payload });\n    return data.data;\n};\n\nexport const logout = async () => {\n    return await authService.post(`${env}/logout`);\n};\n\nexport const register = async ({ payload }) => {\n    return await authService.post(`${env}/create/user`, { ...payload });\n};\n\nexport async function verifyAuth() {\n    try {\n        const { userToken, userID } = getCredentials();\n        const res = await authService.get(`${env}/user/details/${userID}`, {\n            headers: {\n                'Authorization': `Bearer ${userToken}`\n            }\n        });\n        return res.status === 200;\n    } catch (error) {\n        return false;\n    }\n}\n\nexport async function requestPasswordReset({}) {\n    return authService.post(`${env}/forgotPassword`, {});\n}"],"mappings":"AAAA,SAASA,cAAc,QAAQ,uBAAuB;AACtD,SAASC,WAAW,QAAQ,UAAU;AAEtC,MAAMC,GAAG,GAAGC,OAAO,CAACD,GAAG,CAACE,qBAAqB,KAAK,KAAK,GAAG,KAAK,GAAG,EAAE;AAEpE,OAAO,SAASC,SAASA,CAACC,KAAK,EAAE;EAC7B,MAAMC,aAAa,GAAGD,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACzC,IAAIC,OAAO,GAAG,IAAI;EAClB,IAAI;IACA,IAAIF,aAAa,EAAE;MACfE,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,MAAM,CAACC,IAAI,CAACN,aAAa,EAAE,QAAQ,CAAC,CAAC;IAC9D;EACJ,CAAC,CAAC,OAAOO,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAC;EAC3C;EACA,OAAOL,OAAO;AAClB;AAAC;AAED,OAAO,MAAMO,KAAK,GAAG,MAAAA,CAAO;EAAEP;AAAQ,CAAC,KAAK;EACxC,MAAM;IAAEQ;EAAK,CAAC,GAAG,MAAMhB,WAAW,CAACiB,IAAI,CAAE,GAAEhB,GAAI,QAAO,EAAE;IAAE,GAAGO;EAAQ,CAAC,CAAC;EACvE,OAAOQ,IAAI,CAACA,IAAI;AACpB,CAAC;AAED,OAAO,MAAME,MAAM,GAAG,MAAAA,CAAA,KAAY;EAC9B,OAAO,MAAMlB,WAAW,CAACiB,IAAI,CAAE,GAAEhB,GAAI,SAAQ,CAAC;AAClD,CAAC;AAED,OAAO,MAAMkB,QAAQ,GAAG,MAAAA,CAAO;EAAEX;AAAQ,CAAC,KAAK;EAC3C,OAAO,MAAMR,WAAW,CAACiB,IAAI,CAAE,GAAEhB,GAAI,cAAa,EAAE;IAAE,GAAGO;EAAQ,CAAC,CAAC;AACvE,CAAC;AAED,OAAO,eAAeY,UAAUA,CAAA,EAAG;EAC/B,IAAI;IACA,MAAM;MAAEC,SAAS;MAAEC;IAAO,CAAC,GAAGvB,cAAc,CAAC,CAAC;IAC9C,MAAMwB,GAAG,GAAG,MAAMvB,WAAW,CAACwB,GAAG,CAAE,GAAEvB,GAAI,iBAAgBqB,MAAO,EAAC,EAAE;MAC/DG,OAAO,EAAE;QACL,eAAe,EAAG,UAASJ,SAAU;MACzC;IACJ,CAAC,CAAC;IACF,OAAOE,GAAG,CAACG,MAAM,KAAK,GAAG;EAC7B,CAAC,CAAC,OAAOb,KAAK,EAAE;IACZ,OAAO,KAAK;EAChB;AACJ;AAEA,OAAO,eAAec,oBAAoBA,CAAC,CAAC,CAAC,EAAE;EAC3C,OAAO3B,WAAW,CAACiB,IAAI,CAAE,GAAEhB,GAAI,iBAAgB,EAAE,CAAC,CAAC,CAAC;AACxD"},"metadata":{},"sourceType":"module","externalDependencies":[]}