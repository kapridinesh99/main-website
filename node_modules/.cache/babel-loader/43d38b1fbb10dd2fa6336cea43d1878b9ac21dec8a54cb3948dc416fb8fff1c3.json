{"ast":null,"code":"var _jsxFileName = \"/Users/sleepycat/main-website/src/Functions/util.js\";\nimport { decodeJWT } from './auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const formatKey = str => {\n  const formattedString = str.split('_').map(word => {\n    return word.charAt(0).toUpperCase() + word.slice(1);\n  }).join(' ');\n  return formattedString;\n};\nexport const EachField = ({\n  entry,\n  onChange,\n  editableFields,\n  blackListedFields,\n  isEditable\n}) => {\n  const [key, value] = entry;\n  const fieldName = formatKey(key);\n  let formattedValue = value;\n  if (key.trim() === 'initial_investment') {\n    formattedValue = `₹ ${value}`;\n  } else if (key === 'created_at') {\n    formattedValue = getDateFromEpoch(value).toDateString();\n  }\n  return !blackListedFields.includes(key) && key ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-profile-field flex align-center gap-5xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: fieldName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: editableFields.includes(key) ? isEditable ? /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"editable-input\",\n        name: key,\n        id: key,\n        onChange: e => onChange({\n          key,\n          value: e.target.value\n        }),\n        value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"noneditable-field\",\n        children: formattedValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"noneditable-field\",\n        children: formattedValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 24\n      }, this) || 'N/A'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this) : null;\n};\n_c = EachField;\nexport const getDateFromEpoch = epoch => {\n  const date = new Date(epoch * 1000);\n  return date;\n};\nexport const convertTimestamp = timestamp => {\n  const date = new Date(timestamp * 1000);\n  const options = {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n    timeZone: 'UTC'\n  };\n  return date.toLocaleString('en-US', options);\n};\nexport function getCredentials() {\n  try {\n    return JSON.parse(localStorage.getItem('auth_credentials')) || {};\n  } catch (error) {\n    return {};\n  }\n}\nexport function setCredentials(credentials) {\n  localStorage.setItem('auth_credentials', JSON.stringify(credentials));\n}\nexport function clearCredentials() {\n  localStorage.removeItem('auth_credentials');\n}\nexport function getUserId() {\n  const {\n    userID\n  } = getCredentials();\n  return userID || null;\n}\nvar _c;\n$RefreshReg$(_c, \"EachField\");","map":{"version":3,"names":["decodeJWT","jsxDEV","_jsxDEV","formatKey","str","formattedString","split","map","word","charAt","toUpperCase","slice","join","EachField","entry","onChange","editableFields","blackListedFields","isEditable","key","value","fieldName","formattedValue","trim","getDateFromEpoch","toDateString","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","id","e","target","_c","epoch","date","Date","convertTimestamp","timestamp","options","weekday","year","month","day","hour","minute","second","timeZone","toLocaleString","getCredentials","JSON","parse","localStorage","getItem","error","setCredentials","credentials","setItem","stringify","clearCredentials","removeItem","getUserId","userID","$RefreshReg$"],"sources":["/Users/sleepycat/main-website/src/Functions/util.js"],"sourcesContent":["import { decodeJWT } from './auth';\n\nexport const formatKey = (str) => {\n    const formattedString = str.split('_').map((word) => {\n        return word.charAt(0).toUpperCase() + word.slice(1);\n    }).join(' ');\n    return formattedString;\n};\n\nexport const EachField = ({ entry, onChange, editableFields, blackListedFields, isEditable }) => {\n    const [key, value] = entry;\n    const fieldName = formatKey(key);\n    let formattedValue = value;\n    if (key.trim() === 'initial_investment') {\n        formattedValue = `₹ ${value}`;\n    } else if (key === 'created_at') {\n        formattedValue = getDateFromEpoch(value).toDateString();\n    }\n    return (!blackListedFields.includes(key) && key) ? (\n        <div className='user-profile-field flex align-center gap-5xl'>\n            <b>{fieldName}</b>\n            <div>\n                {editableFields.includes(key)\n                    ? (\n                        isEditable ? (\n                            <input className='editable-input' name={key} id={key} onChange={(e) => onChange({ key, value: e.target.value })} {...{ value }} />\n                        ) : (<div className='noneditable-field'>{formattedValue}</div>)\n                    )\n                    : (<div className='noneditable-field'>{formattedValue}</div> || 'N/A')}\n            </div>\n        </div>\n    ) : null;\n};\n\nexport const getDateFromEpoch = (epoch) => {\n    const date = new Date(epoch * 1000);\n    return date;\n}\n\nexport const convertTimestamp = (timestamp) => {\n    const date = new Date(timestamp * 1000);\n    const options = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      second: 'numeric',\n      timeZone: 'UTC'\n    };\n    return date.toLocaleString('en-US', options);\n  }\n\nexport function getCredentials() {\n    try {\n        return JSON.parse(localStorage.getItem('auth_credentials')) || {};\n    } catch (error) {\n        return {};\n    }\n}\n\nexport function setCredentials(credentials) {\n    localStorage.setItem('auth_credentials', JSON.stringify(credentials));\n}\n\nexport function clearCredentials() {\n    localStorage.removeItem('auth_credentials');\n}\n\nexport function getUserId() {\n    const { userID } = getCredentials();\n    return userID || null;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}